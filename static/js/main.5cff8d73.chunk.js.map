{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","api/api.js","App.jsx","index.js"],"names":["TodoList","state","todos","props","value","select","inputHandler","event","target","setState","filter","todo","title","toLowerCase","includes","selectHandler","completed","selectUser","this","className","type","onChange","e","map","classNames","key","id","checked","readOnly","onClick","userId","React","Component","CurrentUser","selectedUser","getUserInfo","prevProps","a","fetch","then","response","json","result","data","clearUser","name","email","phone","App","selectedUserId","requestedTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cff8d73.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    todos: this.props.todos,\n    value: '',\n    select: '',\n  }\n\n  inputHandler = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      todos: this.props.todos.filter(\n        todo => todo.title.toLowerCase().includes(value.toLowerCase()),\n      ),\n      value,\n    });\n  }\n\n  selectHandler = (event) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case 'active':\n        this.setState({\n          todos: this.props.todos.filter(todo => !todo.completed),\n          select: value,\n        });\n        break;\n      case 'completed':\n        this.setState({\n          todos: this.props.todos.filter(todo => todo.completed),\n          select: value,\n        });\n        break;\n      default:\n      case 'all':\n        break;\n    }\n  }\n\n  render() {\n    const { selectUser } = this.props;\n    const { todos, value } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => {\n            this.inputHandler(e);\n          }}\n        />\n        <select\n          value={this.state.select}\n          onChange={(event) => {\n            this.selectHandler(event);\n          }}\n        >\n          <option\n            value=\"all\"\n          >\n            All\n          </option>\n          <option\n            value=\"active\"\n          >\n            Active\n          </option>\n          <option\n            value=\"completed\"\n          >\n            Completed\n          </option>\n        </select>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                className={\n                  classNames('TodoList__item',\n                    { 'TodoList__item--unchecked': !todo.completed },\n                    { 'TodoList__item--checked': todo.completed })\n                }\n                key={todo.id}\n              >\n                <label>\n                  <input type=\"checkbox\" checked={todo.completed} readOnly />\n                  <p>{todo.title}</p>\n                </label>\n                <button\n                  className=\"TodoList__user-button button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectUser(todo.userId);\n                  }}\n                >\n                  User\n                  {' '}\n                  {todo.userId}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    userId: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n  })).isRequired,\n  selectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUserById } from '../../api/api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    selectedUser: null,\n  }\n\n  componentDidMount() {\n    this.getUserInfo();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.getUserInfo();\n    }\n  }\n\n  async getUserInfo() {\n    this.setState({\n      selectedUser: await getUserById(this.props.userId),\n    });\n  }\n\n  render() {\n    const { selectedUser } = this.state;\n    const { clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {!selectedUser ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            <h2 className=\"CurrentUser__title\">\n              <span>\n                Selected user:\n                {' '}\n                {selectedUser.id}\n              </span>\n            </h2>\n\n            <h3 className=\"CurrentUser__name\">{selectedUser.name}</h3>\n            <p className=\"CurrentUser__email\">{selectedUser.email}</p>\n            <p className=\"CurrentUser__phone\">{selectedUser.phone}</p>\n            <button\n              type=\"button\"\n              onClick={clearUser}\n            >\n              Clear\n            </button>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","export const getAllTodos = () => (\n  fetch('https://mate-api.herokuapp.com/todos')\n    .then(response => response.json())\n    .then(result => result.data)\n    .then(data => data.filter(todo => todo.title))\n);\n\nexport const getUserById = userId => (\n  fetch(`https://mate-api.herokuapp.com/users/${userId}`)\n    .then(response => response.json())\n    .then(result => result.data)\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos().then((requestedTodos) => {\n      this.setState({\n        todos: requestedTodos,\n      });\n    });\n  }\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length\n            ? (\n              <TodoList\n                selectUser={this.selectUser}\n                todos={todos}\n              />\n            )\n            : ''}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}